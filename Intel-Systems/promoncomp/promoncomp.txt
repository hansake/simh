Process Monitor Computer Simulator with Intel 8008 CPU
======================================================

1. Background.

In our master thesis work in 1975 we developed a 8008 based
microcomputer for process monitoring and statistics at the
paper mill in Hyltebruk in Sweden at Hylte Bruks AB.

2. Hardware

        We are simulating a "homebuilt" computer (called promoncomp
	i.e. Process Monitor Computer)
	with the following configuration:

        device          simulates
        name(s)

        I8008           Microcomputer with Intel 8008 CPU, 16KB of RAM.
        TTY             Paralell interfaces to keyboard and printer.
        PTR             Paper Tape Reader, not implemented yet.

2.1 CPU

	You may select different memory sizes, the default size is 16K.
	(This is not really a true simukation of the computer as the
	hardware could handle just 1 kByte RAM and 1 kByte EPROM).

        SET I8008 4K
        SET I8008 8K
        SET I8008 12K
        SET I8008 16K

CPU Registers include the following:

        name    size    comments

        PC      14      The Program Counter
        A       8       The accumulator
        B       8       The B register.
        C       8       The C register.
        D       8       The E register.
        E       8       The E register.
        HL      16      The HL register pair.  H is the top 8 bits, L is
                        the bottom 8 bits.
        SP      3       Stack Pointer to return address in stack.
        CF      1       Carry Flag.
        ZF      1       Zero Flag.
        PF      1       Parity Flag.
        SF      1       Sign Flag.
        WRU     8       The interrupt character.  This starts as 005
                        (Ctrl-E)

2.2 The Keyboard and Printer Interface

    This code is mapping the I/O ports to support simulated I/O for
    the Intel 8008 computer built for a master thesis in 1975.

    Note that Inport 0 is read by the assembler code as INP 0
    Outport 0 is written by the AS Macro Assembler code as OUT 10 (octal)

    The following i/o ports were used in this computer:
    Outport 0: used to select device for reading from Inport 0
        and writing to Outport 3.
    Inport 0: used to read external data.
    Outport 3: used to write external data.

    Outport 1: used to save interupt state, connected to Inport 1.
    Outport 2: used to save interupt state, connected to Inport 2.

    Inport 3: used to input data from tape-reader
    Outport 4: used to output character to printer (implemented).
    Inport 5: used to input character from keyboard (implemented).

    Inport 4: used for status flags for the ports (Flagport).
      Flag 1 (bit 0): set to 1 when printer ready (implemented).
      Flag 2 (bit 1): set to 1 when input available from tape-reader.
      Flag 3 (bit 2): set to 1 when tape in tape-reader.
      Flag 5 (bit 4): set to 1 when character available from keyboard (implemented).
      Flag 7 (bit 6): set to 1 when the reset key on the computer is pressed.

    Inport 7: used to start the printer motor, just using an output pulse,
        no data is read.

3. Sample Software

	SCELBAL was called the SCientific ELementary BAsic for the 8008 
and 8080 by SCELBI Computer Consulting.  SCELBAL could be run on a SCELBI 
or other 8008 based machine that had 8K of memory. SCELBAL completely 
supported floating point math with 6 digits of precision.  As time went on, 
additional packages including matrix arithmetic and math functions were added.

SCELBAL can be downloaded from http://www.willegal.net/scelbi/scelbal.html
there are assembler source, hex and binary images available for three
variants of SCELBAL. The web page also includes information about SCELBAL
and a link to a scan of the SCELBI's SCELBAL book:
http://www.scelbi.com/files/docs/scelbal/SCELBAL.pdf
In chapter 14 of the SCELBAL book there is a language reference.

To run SCELBAL on the SCELBI simulator, download the binary code from:
http://www.willegal.net/scelbi/software/sc1.bin

SCELBAL source code for SCELBI and also code modified for the promoncomp
is in the repository: https://github.com/hansake/Software_for_Intel_8008
